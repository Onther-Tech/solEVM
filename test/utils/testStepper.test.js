'use strict';

const HydratedRuntime = require('./../../utils/HydratedRuntime');
const Merkelizer = require('../../utils/Merkelizer');
const OP = require('../../utils/constants');
const debug = require('debug')('dispute-test');

let code = '6080604052600436106100505760003560e01c63ffffffff168063141f32ff146100555780632e52d606146100a257806367e404ce146100cd5780639b58bc2614610124578063eea4c86414610171575b600080fd5b34801561006157600080fd5b506100a0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506101be565b005b3480156100ae57600080fd5b506100b7610242565b6040518082815260200191505060405180910390f35b3480156100d957600080fd5b506100e2610248565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013057600080fd5b5061016f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061026e565b005b34801561017d57600080fd5b506101bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506102f0565b005b8173ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744e2875696e743235362900000000000000000000000000000000000000815250600d019050604051809103902060e01c826040518263ffffffff1660e01b8152600401808281526020019150506000604051808303816000875af292505050505050565b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8173ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744e2875696e743235362900000000000000000000000000000000000000815250600d019050604051809103902060e01c826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381865af492505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1660405180807f7365744e2875696e743235362900000000000000000000000000000000000000815250600d019050604051809103902060e01c826040518263ffffffff1660e01b8152600401808281526020019150506000604051808303816000875af1925050505050505600a165627a7a72305820ef6419e53bb5b6911db1b3e53234cb7ec9e96849b62583cdcb667d933794ea860029';
const data = '0xeea4c86400000000000000000000000008970fed061e7747cd9a38d680a601510cb659fb000000000000000000000000000000000000000000000000000000000000000a';
// const stack = [
//   '0x0000000000000000000000000000000000000000000000000000000070a08231',
//   '0x0000000000000000000000000000000000000000000000000000000000000263',
//   '0x000000000000000000000000ca35b7d915458ef540ade6068dfe2f44e8fa733c'
// ];
// const mem = [
//   '0x0000000000000000000000000000000000000000000000000000000000000000',
//   '0x0000000000000000000000000000000000000000000000000000000000000000',
//   '0x0000000000000000000000000000000000000000000000000000000000000080'
// ];
// const tStorage = [
//   '0xaf63dba574b8df870564c0cfef95996d0bf09a9de28de1e31994eb090e8e7737',
//   '0x00000000000000000000000000000000000000000000000000000000000003e8',
//   '0x0000000000000000000000000000000000000000000000000000000000000002',
//   '0x00000000000000000000000000000000000000000000000000000000000003e8'
// ];

let steps;
let copy;
let merkle;
const runtime = new HydratedRuntime();

(async function(){
    steps = await runtime.run({ code, data, pc: 0, stepCount: 355 });
    console.log(steps[134], steps.length);
    //merkle = await new Merkelizer().run(steps, code, data, tStorage);
    //console.log(merkle.printTree());
})();